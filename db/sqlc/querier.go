// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"context"
)

type Querier interface {
	AddToAccountBalance(ctx context.Context, arg AddToAccountBalanceParams) (Account, error)
	CreateAccount(ctx context.Context, arg CreateAccountParams) (Account, error)
	CreateEntry(ctx context.Context, arg CreateEntryParams) (Entry, error)
	CreateTransfer(ctx context.Context, arg CreateTransferParams) (Transfer, error)
	DeleteAccountById(ctx context.Context, id int64) error
	// FOR UPDATE meake a select for transactional queries, it locks the row until the transaction is finished
	FindAllAccounts(ctx context.Context, arg FindAllAccountsParams) ([]Account, error)
	FindAllEntries(ctx context.Context, arg FindAllEntriesParams) ([]Entry, error)
	FindAllTransfers(ctx context.Context, arg FindAllTransfersParams) ([]Transfer, error)
	GetAccountById(ctx context.Context, id int64) (Account, error)
	GetAccountForUpdateById(ctx context.Context, id int64) (Account, error)
	GetEntryById(ctx context.Context, id int64) (Entry, error)
	GetTransferById(ctx context.Context, id int64) (Transfer, error)
	UpdateAccountBalance(ctx context.Context, arg UpdateAccountBalanceParams) (Account, error)
}

var _ Querier = (*Queries)(nil)
